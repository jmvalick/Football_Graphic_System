% Auto-generated by cameraCalibrator app on 07-Apr-2024
%-------------------------------------------------------
function cameraParamsOut = calibration_script()

    % Define images to process
    imageFileNames = {'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3685.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3686.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3687.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3688.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3689.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3690.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3691.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3692.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3693.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3694.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3695.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3696.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3697.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3698.JPG',...
        'D:\PSU\Spring2024\CSE586\FinalProject\MatlabCode\Calibration\Calibration_images\IMG_3699.JPG',...
        };
    % Detect calibration pattern in images
    detector = vision.calibration.monocular.CheckerboardDetector();
    [imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames);
    imageFileNames = imageFileNames(imagesUsed);
    
    % Read the first image to obtain image size
    originalImage = imread(imageFileNames{1});
    [mrows, ncols, ~] = size(originalImage);
    
    % Generate world coordinates for the planar pattern keypoints
    squareSize = 22;  % in units of 'millimeters'
    worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);
    
    % Calibrate the camera
    [cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
        'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
        'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
        'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
        'ImageSize', [mrows, ncols]);
    
    % View reprojection errors
    h1=figure; showReprojectionErrors(cameraParams);
    
    % Visualize pattern locations
    h2=figure; showExtrinsics(cameraParams, 'patternCentric');
    
    % Display parameter estimation errors
    displayErrors(estimationErrors, cameraParams);
    
    % For example, you can use the calibration data to remove effects of lens distortion.
    undistortedImage = undistortImage(originalImage, cameraParams);
    
    % See additional examples of how to use the calibration data.  At the prompt type:
    % showdemo('MeasuringPlanarObjectsExample')
    % showdemo('StructureFromMotionExample')

    cameraParamsOut = cameraParams;
end
